openapi: 3.0.3

info:
  title: H2SCM - Supply and Demand API Documentation
  description: API defining the endpoints available in the Supply and Demand API
  version: 1.0.0

components:
  schemas:
    Message:
      type: object
      properties:
        message:
          type: string
    SimulationResults:
      $ref: "../../shared/schemas/simulation/SimulationResults.json#/$defs/APIResponse"
    SimulationInput:
      $ref: "../../shared/schemas/simulation/SimulationInput.json#/definitions/APIInput"
  securitySchemes:
    CognitoUserPool:
      type: apiKey
      name: Authorization
      in: header
      x-amazon-apigateway-authtype: cognito_user_pools
      x-amazon-apigateway-authorizer:
        type: cognito_user_pools
        providerARNs:
          - ${cognito_user_pool_arn}
paths:
  /repositories/{repo}/simulation:
    post:
      operationId: simulation
      description: Run a simulation using the SCM store
      security:
        - CognitoUserPool: ["aws.cognito.signin.user.admin"]

      parameters:
        - name: repo
          in: path
          required: true
          description: the name of the repository
          schema:
            type: string
        - name: debug
          in: query
          required: false
          description: to return or not to return debug output
          schema:
            type: boolean
        - name: instances
          in: query
          required: false
          description: A comma separated list of the instance ID's to use for the simulation (defaults to default)
          schema:
            type: string
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:${aws_region}:lambda:path/2015-03-31/functions/${lambda_api_run_simulation_arn}/invocations"
        passthroughBehavior: "when_no_match"
        httpMethod: "POST"
        timeoutInMillis: ${lambda_identity_timeout}
        type: "aws_proxy"
        contentHandling: "CONVERT_TO_TEXT"
      x-amazon-apigateway-auth:
        type: "NONE"
      x-amazon-apigateway-api-key-source: "HEADER"

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SimulationInput"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SimulationResults"
    options:
      security: []
      parameters:
        - name: repo
          in: path
          required: true
          description: the name of the repository
          schema:
            type: string
      responses:
        "200":
          description: Default response
          headers:
            Access-Control-Allow-Headers:
              schema:
                type: string
            Access-Control-Allow-Methods:
              schema:
                type: string
            Access-Control-Allow-Origin:
              schema:
                type: string
      x-amazon-apigateway-integration:
        type: mock
        requestTemplates:
          application/json: |
            {"statusCode" : 200}
        responses:
          default:
            statusCode: 200
            responseParameters:
              method.response.header.Access-Control-Allow-Headers: "'*'"
              method.response.header.Access-Control-Allow-Methods: "'OPTIONS,POST'"
              method.response.header.Access-Control-Allow-Origin: "'*'"
